akatsuki_oshiro@osiris:~$ python -m pip install --user esptool
Collecting esptool
  Downloading esptool-3.0.tar.gz (149 kB)
     |████████████████████████████████| 149 kB 5.6 MB/s 
Collecting bitstring>=3.1.6
  Downloading bitstring-3.1.7.tar.gz (195 kB)
     |████████████████████████████████| 195 kB 24.2 MB/s 
Requirement already satisfied: cryptography>=2.1.4 in /usr/lib/python3/dist-packages (from esptool) (2.8)
Collecting ecdsa>=0.16.0
  Downloading ecdsa-0.16.0-py2.py3-none-any.whl (103 kB)
     |████████████████████████████████| 103 kB 34.0 MB/s 
Requirement already satisfied: pyserial>=3.0 in ./.local/lib/python3.8/site-packages (from esptool) (3.4)
Collecting reedsolo<=1.5.4,>=1.5.3
  Downloading reedsolo-1.5.4.tar.gz (271 kB)
     |████████████████████████████████| 271 kB 56.6 MB/s 
Requirement already satisfied: six>=1.9.0 in /usr/lib/python3/dist-packages (from ecdsa>=0.16.0->esptool) (1.14.0)
Building wheels for collected packages: esptool, bitstring, reedsolo
  Building wheel for esptool (setup.py) ... done
  Created wheel for esptool: filename=esptool-3.0-py3-none-any.whl size=237302 sha256=5df28683be48a5249ddb6348df6185cc9449925aa4495327bcdd6f71e617b6a0
  Stored in directory: /home/akatsuki_oshiro/.cache/pip/wheels/85/5d/04/0117d7a4b153d1f42f4f95df3990f587d1f1bbde09e7b7d38a
  Building wheel for bitstring (setup.py) ... done
  Created wheel for bitstring: filename=bitstring-3.1.7-py3-none-any.whl size=37946 sha256=95b0538ebfdb49349e1b18a326b23dc460e9bbef0185ba99b9c278a28c7c037f
  Stored in directory: /home/akatsuki_oshiro/.cache/pip/wheels/6c/2f/25/52effb6e8c69461de76989c5996e836583fa7bbbc7cd539af1
  Building wheel for reedsolo (setup.py) ... done
  Created wheel for reedsolo: filename=reedsolo-1.5.4-py3-none-any.whl size=28950 sha256=32fdb65c932a33b9bb943b74979a3bac74b93085f84edcf84f0863454868a7a6
  Stored in directory: /home/akatsuki_oshiro/.cache/pip/wheels/09/d5/d4/7485a909ef156de1ad5d336eecbd784dd9d54af373850ff4bc
Successfully built esptool bitstring reedsolo
Installing collected packages: bitstring, ecdsa, reedsolo, esptool
Successfully installed bitstring-3.1.7 ecdsa-0.16.0 esptool-3.0 reedsolo-1.5.4
akatsuki_oshiro@osiris:~$ esptool.py --chip esp32 --port /dev/ttyUSB0 erase_flash
esptool.py v3.0
Serial port /dev/ttyUSB0
Connecting.....
Chip is ESP32-D0WDQ6 (revision 1)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: f0:08:d1:cf:f9:84
Uploading stub...
Running stub...
Stub running...
Erasing flash (this may take a while)...
Chip erase completed successfully in 14.0s
Hard resetting via RTS pin...
akatsuki_oshiro@osiris:~$ screen /dev/ttyUSB0 115200
bash: screen: command not found
akatsuki_oshiro@osiris:~$ man screen
No manual entry for screen
akatsuki_oshiro@osiris:~$ sudo apt-get install screen
[sudo] password for akatsuki_oshiro:               
Reading package lists... Done
Building dependency tree       
Reading state information... Done
The following additional packages will be installed:
  libutempter0
Suggested packages:
  byobu | screenie | iselect
The following NEW packages will be installed:
  libutempter0 screen
0 upgraded, 2 newly installed, 0 to remove and 335 not upgraded.
Need to get 585 kB of archives.
After this operation, 1,073 kB of additional disk space will be used.
Do you want to continue? [Y/n] Y
Get:1 http://archive.ubuntu.com/ubuntu focal/main amd64 libutempter0 amd64 1.1.6-4 [8,256 B]
Get:2 http://archive.ubuntu.com/ubuntu focal/main amd64 screen amd64 4.8.0-1 [577 kB]
Fetched 585 kB in 2s (261 kB/s) 
Selecting previously unselected package libutempter0:amd64.
(Reading database ... 312000 files and directories currently installed.)
Preparing to unpack .../libutempter0_1.1.6-4_amd64.deb ...
Unpacking libutempter0:amd64 (1.1.6-4) ...
Selecting previously unselected package screen.
Preparing to unpack .../screen_4.8.0-1_amd64.deb ...
Unpacking screen (4.8.0-1) ...
Setting up libutempter0:amd64 (1.1.6-4) ...
Setting up screen (4.8.0-1) ...
Processing triggers for man-db (2.9.1-1) ...
Processing triggers for install-info (6.7.0.dfsg.2-5) ...
Processing triggers for libc-bin (2.31-0ubuntu9) ...
Processing triggers for systemd (245.4-4ubuntu3) ...
akatsuki_oshiro@osiris:~$ screen /dev/ttyUSB0 115200
rst:0x10 (RTCWDT_RTC_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)
flash read err, 1000
ets_main.c 371 

(to exit screen, type Ctrl+A, Ctrl+D)

akatsuki_oshiro@osiris:~$ esptool.py --chip esp32 --port /dev/ttyUSB0 --baud 460800 write_flash -z 0x1000 esp32-idf3-20200902-v1.13.bin 
esptool.py v3.0
Serial port /dev/ttyUSB0
Traceback (most recent call last):
  File "/home/akatsuki_oshiro/.local/lib/python3.8/site-packages/serial/serialposix.py", line 265, in open
    self.fd = os.open(self.portstr, os.O_RDWR | os.O_NOCTTY | os.O_NONBLOCK)
OSError: [Errno 16] Device or resource busy: '/dev/ttyUSB0'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/akatsuki_oshiro/.local/bin/esptool.py", line 3969, in <module>
    _main()
  File "/home/akatsuki_oshiro/.local/bin/esptool.py", line 3962, in _main
    main()
  File "/home/akatsuki_oshiro/.local/bin/esptool.py", line 3551, in main
    esp = chip_class(each_port, initial_baud, args.trace)
  File "/home/akatsuki_oshiro/.local/bin/esptool.py", line 271, in __init__
    self._port = serial.serial_for_url(port)
  File "/home/akatsuki_oshiro/.local/lib/python3.8/site-packages/serial/__init__.py", line 88, in serial_for_url
    instance.open()
  File "/home/akatsuki_oshiro/.local/lib/python3.8/site-packages/serial/serialposix.py", line 268, in open
    raise SerialException(msg.errno, "could not open port {}: {}".format(self._port, msg))
serial.serialutil.SerialException: [Errno 16] could not open port /dev/ttyUSB0: [Errno 16] Device or resource busy: '/dev/ttyUSB0'

(Disconnect and Reconnect esp32 to exit screen command keeping device busy)

akatsuki_oshiro@osiris:~$ esptool.py --chip esp32 --port /dev/ttyUSB0 --baud 460800 write_flash -z 0x1000 esp32-idf3-20200902-v1.13.bin 
esptool.py v3.0
Serial port /dev/ttyUSB0
Connecting....
Chip is ESP32-D0WDQ6 (revision 1)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: f0:08:d1:cf:f9:84
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Compressed 1448768 bytes to 926007...
Wrote 1448768 bytes (926007 compressed) at 0x00001000 in 22.1 seconds (effective 524.7 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...


Download code from:

https://micropython.org/download/esp32/

Run this screen command: screen /dev/ttyUSB0 115200
Press enter to get Python Terminal:

>>> help()
Welcome to MicroPython on the ESP32!

For generic online docs please visit http://docs.micropython.org/

For access to the hardware use the 'machine' module:

import machine
pin12 = machine.Pin(12, machine.Pin.OUT)
pin12.value(1)
pin13 = machine.Pin(13, machine.Pin.IN, machine.Pin.PULL_UP)
print(pin13.value())
i2c = machine.I2C(scl=machine.Pin(21), sda=machine.Pin(22))
i2c.scan()
i2c.writeto(addr, b'1234')
i2c.readfrom(addr, 4)

Basic WiFi configuration:

import network
sta_if = network.WLAN(network.STA_IF); sta_if.active(True)
sta_if.scan()                             # Scan for available access points
sta_if.connect("<AP_name>", "<password>") # Connect to an AP
sta_if.isconnected()                      # Check for successful connection

Control commands:
  CTRL-A        -- on a blank line, enter raw REPL mode
  CTRL-B        -- on a blank line, enter normal REPL mode
  CTRL-C        -- interrupt a running program
  CTRL-D        -- on a blank line, do a soft reset of the board
  CTRL-E        -- on a blank line, enter paste mode

For further help on a specific object, type help(obj)
For a list of available modules, type help('modules')

akatsuki_oshiro@osiris:~$ python -m pip install adafruit-ampy
Collecting adafruit-ampy
  Downloading adafruit_ampy-1.0.7-py2.py3-none-any.whl (16 kB)
Requirement already satisfied: pyserial in ./.local/lib/python3.8/site-packages (from adafruit-ampy) (3.4)
Collecting python-dotenv
  Downloading python_dotenv-0.15.0-py2.py3-none-any.whl (18 kB)
Requirement already satisfied: click in ./.local/lib/python3.8/site-packages (from adafruit-ampy) (7.1.2)
Installing collected packages: python-dotenv, adafruit-ampy
Successfully installed adafruit-ampy-1.0.7 python-dotenv-0.15.0
akatsuki_oshiro@osiris:~$ ampy --help
Usage: ampy [OPTIONS] COMMAND [ARGS]...

  ampy - Adafruit MicroPython Tool

  Ampy is a tool to control MicroPython boards over a serial connection.
  Using ampy you can manipulate files on the board's internal filesystem and
  even run scripts.

Options:
  -p, --port PORT    Name of serial port for connected board.  Can optionally
                     specify with AMPY_PORT environment variable.  [required]

  -b, --baud BAUD    Baud rate for the serial connection (default 115200).
                     Can optionally specify with AMPY_BAUD environment
                     variable.

  -d, --delay DELAY  Delay in seconds before entering RAW MODE (default 0).
                     Can optionally specify with AMPY_DELAY environment
                     variable.

  --version          Show the version and exit.
  --help             Show this message and exit.

Commands:
  get    Retrieve a file from the board.
  ls     List contents of a directory on the board.
  mkdir  Create a directory on the board.
  put    Put a file or folder and its contents on the board.
  reset  Perform soft reset/reboot of the board.
  rm     Remove a file from the board.
  rmdir  Forcefully remove a folder and all its children from the board.
  run    Run a script and print its output.

akatsuki_oshiro@osiris:~$ ampy -p /dev/ttyUSB0 -b 115200 run boot.py
^C
Aborted!
akatsuki_oshiro@osiris:~$ cat boot.py 
# This file is executed on every boot (including wake-boot from deepsleep)
#import esp
#esp.osdebug(None)
#import webrepl
#webrepl.start()
from machine import Pin
from time import sleep

led = Pin(2, Pin.OUT)

while True:
	led.value(not led.value())
	sleep(1.5)

